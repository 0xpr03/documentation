(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{212:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"ranking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ranking"}},[e._v("#")]),e._v(" Ranking")]),e._v(" "),a("p",[e._v("MeiliSearch uses ranking rules. We talk about one "),a("code",[e._v("criterion")]),e._v(" (singular) and many "),a("code",[e._v("criteria")]),e._v(" (plural). They are used in the "),a("a",{attrs:{href:"/advanced_guides/bucket_sort"}},[e._v("bucket sort")])]),e._v(" "),a("h2",{attrs:{id:"ranking-rules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ranking-rules"}},[e._v("#")]),e._v(" Ranking rules")]),e._v(" "),a("p",[e._v("MeiliSearch has default "),a("code",[e._v("criteria")]),e._v(".")]),e._v(" "),a("p",[e._v("Here is the list of all the "),a("code",[e._v("criteria")]),e._v(" that are executed in this specific order by default:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Number of Typos")]),e._v(" - The less typos there are beween the query words and the document words, the better is the document.")]),e._v(" "),a("li",[a("code",[e._v("Number of Words")]),e._v(" - A document containing more of the query words will be more important than one that contains less.")]),e._v(" "),a("li",[a("code",[e._v("Words Proximity")]),e._v(" - The closer the query words are in the document the better is the document.")]),e._v(" "),a("li",[a("code",[e._v("Attribute")]),e._v(" - A document containing the query words in a more important attribute than another document is considered better.")]),e._v(" "),a("li",[a("code",[e._v("Position")]),e._v(" - A document containing the query words at the start of an attribute is considered better than a document that contains them at the end.")]),e._v(" "),a("li",[a("code",[e._v("Exact")]),e._v(" - A document containing the query words in their exact form, not only a prefix of them, is considered better.")])]),e._v(" "),a("h2",{attrs:{id:"custom-ranking-rules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-ranking-rules"}},[e._v("#")]),e._v(" Custom ranking rules")]),e._v(" "),a("p",[e._v("Custom ranking rules gives you the possibility to add new rules. New rules can be added on attributes that has the "),a("code",[e._v("ranked")]),e._v(" tag in the "),a("router-link",{attrs:{to:"/main_concept/indexes.html#ranked"}},[e._v("schema")]),e._v(".")],1),e._v(" "),a("p",[e._v("A rule is defined by an "),a("strong",[e._v("attribute")]),e._v(" and a "),a("strong",[e._v("ascendent")]),e._v(" "),a("code",[e._v("asc")]),e._v(" or "),a("strong",[e._v("descendent")]),e._v(" "),a("code",[e._v("dsc")]),e._v(" property.")]),e._v(" "),a("p",[e._v("The name of the ranking rule is the name of the attribute on which the rule is made.")]),e._v(" "),a("p",[e._v("For those rules to be applied by MeiliSearch on your search queries, it must be added to the "),a("router-link",{attrs:{to:"/advanced_guides/ranking.html#ranking-order"}},[e._v("ranking order")]),e._v(".")],1),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("If the rule is not added to the rule ranking order, it will be "),a("strong",[e._v("ignored")]),e._v(" by MeiliSearch.")])]),e._v(" "),a("h3",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[e._v("#")]),e._v(" Example")]),e._v(" "),a("p",[e._v("On the "),a("code",[e._v("release_date")]),e._v(" attribute of a movie data set, which contains the timestamp of the release date.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" --request POST "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'http://localhost:8080/indexes/movies/settings'")]),e._v(" \n  --header "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Content-Type: application/json'")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --header "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"X-Meili-API-Key: '),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$API_KEY")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --data "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'{ "rankingRules" : { "release_date": "dsc" } }\'')]),e._v("\n")])])]),a("p",[e._v("We create a custom ranking rule that must have the attribute name as key : "),a("code",[e._v("release_date")]),e._v(" and we ask it to be "),a("code",[e._v("dsc")]),e._v(" which means "),a("em",[e._v("descending")]),e._v(".")]),e._v(" "),a("p",[e._v("Now if added to the ranking order documents will be ordered by descending release_date.")]),e._v(" "),a("h2",{attrs:{id:"ranking-order"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ranking-order"}},[e._v("#")]),e._v(" Ranking order")]),e._v(" "),a("p",[e._v("The ranking order determine the order of each rule in the "),a("a",{attrs:{href:"/advanced_guides/bucket_sort"}},[e._v("bucket sort")]),e._v(".")]),e._v(" "),a("p",[e._v("The default ranking order is as follows ("),a("router-link",{attrs:{to:"/advanced_guides/ranking.html#ranking-rules"}},[a("em",[e._v("see above for more detail about each rule")])]),e._v(") :")],1),e._v(" "),a("ul",[a("li",[a("code",[e._v("Number of Typos")])]),e._v(" "),a("li",[a("code",[e._v("Number of Words")])]),e._v(" "),a("li",[a("code",[e._v("Words Proximity")])]),e._v(" "),a("li",[a("code",[e._v("Attribute")])]),e._v(" "),a("li",[a("code",[e._v("Position")])]),e._v(" "),a("li",[a("code",[e._v("Exact")])])]),e._v(" "),a("p",[a("router-link",{attrs:{to:"/references/settings.html#add-settings"}},[e._v("The ranking order can be changed")]),e._v(". Rules can be removed by omitting them in the ranking order list, and custom rules must be added in the ranking order list to be applied.")],1),e._v(" "),a("p",[e._v("Each time you create "),a("strong",[e._v("a new ranking rule it must be added to the existing ranking order to be applied")]),e._v(" by the "),a("a",{attrs:{href:"/advanced_guides/bucket_sort"}},[e._v("bucket sort")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"example-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-2"}},[e._v("#")]),e._v(" Example")]),e._v(" "),a("p",[e._v("To apply the "),a("router-link",{attrs:{to:"/advanced_guides/ranking.html#custom-ranking-rules"}},[e._v("custom ranking rule added previously")]),e._v(", lets add it to the ranking order.")],1),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" --request POST "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'http://localhost:8080/indexes/movies/settings'")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --header "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Content-Type: application/json'")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --header "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"X-Meili-API-Key: '),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$API_KEY")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --data "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'{\n  "rankingOrder": [\n    "_sum_of_typos",\n    "_number_of_words",\n    "_word_proximity",\n    "_sum_of_words_attribute",\n    "_sum_of_words_position",\n    "_exact",\n    "release_date"\n  ]\n}\'')]),e._v("\n")])])]),a("p",[e._v("Now, our "),a("strong",[e._v("search results will be ordered by descending date")]),e._v(" after all other rules have been applied in the "),a("a",{attrs:{href:"/advanced_guides/bucket_sort"}},[e._v("bucket sort")]),e._v(".")])])}),[],!1,null,null,null);t.default=s.exports}}]);