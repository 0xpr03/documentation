(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{221:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"asynchronous-updates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#asynchronous-updates"}},[t._v("#")]),t._v(" Asynchronous Updates")]),t._v(" "),a("p",[t._v("MeiliSearch is an "),a("strong",[t._v("asynchronous API")]),t._v(". It means that the API does not behave as you would typically expect when handling the request's responses.")]),t._v(" "),a("p",[t._v("Some actions are put in a queue and will be executed in turn (asynchronously). In this case, the server response contains the identifier to track the execution of the action.")]),t._v(" "),a("h3",{attrs:{id:"async-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-flow"}},[t._v("#")]),t._v(" Async flow")]),t._v(" "),a("ul",[a("li",[t._v("When making a write request ("),a("em",[t._v("create/update/delete")]),t._v(") against the search engine, it stores the writing action received in a queue and returns an "),a("code",[t._v("update_id")]),t._v(". With this id, the specific action execution is trackable.")]),t._v(" "),a("li",[t._v("Each update received is treated following the order it has been received.")]),t._v(" "),a("li",[t._v("You can get the update status on the "),a("a",{attrs:{href:"/references/updates"}},[a("code",[t._v("/updates")])]),t._v(" route.")])]),t._v(" "),a("mermaid",[t._v("\nsequenceDiagram\n  participant C as Client\n  participant Q as Queue\n  participant M as MeiliSearch\n  C->>Q: enqueue first update\n  Q--\x3e>C: return update_id: 1\n  Q--\x3e>+M: begin update 1\n  C->>Q: enqueue second update\n  Q--\x3e>C: return update_id: 2\n  M->>-Q: dequeue update 1\n  Q--\x3e>+M: begin update 2\n  M->>-Q: dequeue update 2\n")]),t._v(" "),a("h3",{attrs:{id:"which-actions-are-async"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#which-actions-are-async"}},[t._v("#")]),t._v(" Which actions are async?")]),t._v(" "),a("p",[t._v("Every action which could be compute-expensive is asynchronous. These include:")]),t._v(" "),a("ul",[a("li",[t._v("Create/update a schema")]),t._v(" "),a("li",[t._v("Update index settings")]),t._v(" "),a("li",[t._v("Add/update/delete documents")])]),t._v(" "),a("h3",{attrs:{id:"understanding-updates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#understanding-updates"}},[t._v("#")]),t._v(" Understanding updates")]),t._v(" "),a("p",[t._v("Updates returns the following informations:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("status")]),t._v(": State of the action (enqueued, processed)")]),t._v(" "),a("li",[a("strong",[t._v("update_id")]),t._v(": Id of the update")]),t._v(" "),a("li",[a("strong",[t._v("update_type")]),t._v(": Information about the action type")]),t._v(" "),a("li",[a("strong",[t._v("enqueued_at")]),t._v(": Date at which the action has been added to the queue")]),t._v(" "),a("li",[a("strong",[t._v("processed_at")]),t._v(": Date ate which the action has done processing.")])]),t._v(" "),a("h3",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),a("p",[t._v("Adding documents :")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enqueued"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"update_id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"update_type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DocumentsAddition"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"number"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19652")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enqueued_at"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-11-13T14:51:22.857056Z"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Updating a schema :")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"processed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"update_id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Schema"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"duration"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.006275499")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enqueued_at"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-11-13T14:22:50.162113Z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"processed_at"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-11-13T14:22:50.169012Z"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])],1)}),[],!1,null,null,null);e.default=n.exports}}]);