(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{386:function(e,t,a){"use strict";a.r(t);var s=a(8),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"data-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-types"}},[e._v("#")]),e._v(" Data Types")]),e._v(" "),a("p",[e._v("This guide describes the different data types supported for the fields in a document and how MeiliSearch handles them.")]),e._v(" "),a("p",[e._v("No matter the type, the value of a field will remain unchanged in the returned documents upon search."),a("br"),e._v("\nFor example, if you have a complex field with nested objects, this field will be returned with the same complexity upon search.")]),e._v(" "),a("p",[e._v("Based on their type, however, the fields will be handled and used in different ways by MeiliSearch. "),a("strong",[e._v("The type affects how a field is used for search results")]),e._v(".")]),e._v(" "),a("p",[e._v("Types:")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/guides/advanced_guides/datatypes.html#string"}},[e._v("String")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/guides/advanced_guides/datatypes.html#numeric-type"}},[e._v("Numeric types")]),e._v(": "),a("code",[e._v("integer")]),e._v(", "),a("code",[e._v("float")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/guides/advanced_guides/datatypes.html#boolean"}},[e._v("Boolean")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/guides/advanced_guides/datatypes.html#array"}},[e._v("Array")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/guides/advanced_guides/datatypes.html#object"}},[e._v("Object")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/guides/advanced_guides/datatypes.html#null-type"}},[a("code",[e._v("null")]),e._v(" type")])],1)]),e._v(" "),a("h3",{attrs:{id:"string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[e._v("#")]),e._v(" String")]),e._v(" "),a("p",[e._v("String is the primary type for indexing data in MeiliSearch. It enables to create the content in which to search. Strings are processed as detailed below.")]),e._v(" "),a("blockquote",[a("p",[e._v("String tokenization is the process of splitting a string into a list of individual terms that are called tokens.")])]),e._v(" "),a("p",[e._v("A string is passed to a tokenizer and is then broken into separate string tokens. A token is a "),a("strong",[e._v("word")]),e._v(".")]),e._v(" "),a("ul",[a("li",[e._v("For Latin-based languages, the words are separated by "),a("strong",[e._v("space")]),e._v(".")]),e._v(" "),a("li",[e._v("For Kanji characters, the words are separated by "),a("strong",[e._v("character")]),e._v(".")])]),e._v(" "),a("p",[e._v("For Latin-based languages, there are two kinds of "),a("strong",[e._v("space separators")]),e._v(":")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Soft spaces")]),e._v(" (distance: 1): whitespaces, quotes, "),a("code",[e._v("'-' | '_' | '\\'' | ':' | '/' | '\\\\' | '@'")])]),e._v(" "),a("li",[a("strong",[e._v("Hard spaces")]),e._v(" (distance: 8): "),a("code",[e._v("'.' | ';' | ',' | '!' | '?' | '(' | ')'")])])]),e._v(" "),a("p",[e._v("Distance plays an essential role in determining whether documents are relevant since "),a("RouterLink",{attrs:{to:"/guides/main_concepts/relevancy.html"}},[e._v("one of the ranking rules is the "),a("strong",[e._v("proximity")]),e._v(" rule")]),e._v(". The proximity rule sorts the results by increasing distance between matched query terms. Then, two words separated by a soft space are closer and thus considered "),a("strong",[e._v("more relevant")]),e._v(" than two words separated by a hard space.")],1),e._v(" "),a("p",[e._v("After the tokenizing process, each word is indexed and stored in the global dictionary of the corresponding index.")]),e._v(" "),a("h4",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("p",[e._v("To demonstrate how a string is split by space, let's say you have the following string as an input:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"Bruce Willis,Vin Diesel"\n')])])]),a("p",[e._v("In the example above, the distance between "),a("code",[e._v("Bruce")]),e._v(" and "),a("code",[e._v("Willis")]),e._v(" is equal to "),a("strong",[e._v("1")]),e._v(". The distance between "),a("code",[e._v("Vin")]),e._v(" and "),a("code",[e._v("Diesel")]),e._v(" is equal to "),a("strong",[e._v("1")]),e._v(" too."),a("br"),e._v("\nBut, the distance between "),a("code",[e._v("Bruce")]),e._v(" and "),a("code",[e._v("Vin")]),e._v(" is equal to "),a("strong",[e._v("8")]),e._v(". The same goes for "),a("code",[e._v("Bruce")]),e._v(" and "),a("code",[e._v("Diesel")]),e._v(", or "),a("code",[e._v("Willis")]),e._v(" and "),a("code",[e._v("Vin")]),e._v(", or also "),a("code",[e._v("Willis")]),e._v(" and "),a("code",[e._v("Diesel")]),e._v(".")]),e._v(" "),a("p",[e._v("Let's see another example. Given two documents:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"movie_id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"001"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Bruce.Willis"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"movie_id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"002"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Bruce super Willis"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),a("p",[e._v("When making a query on "),a("code",[e._v("Bruce Willis")]),e._v(", "),a("code",[e._v("002")]),e._v(" will be the first document returned and "),a("code",[e._v("001")]),e._v(" will be the second one."),a("br"),e._v("\nThis will happen because the proximity distance between "),a("code",[e._v("Bruce")]),e._v(" and "),a("code",[e._v("Willis")]),e._v(" is equal to "),a("strong",[e._v("2")]),e._v(" in the document "),a("code",[e._v("002")]),e._v(" whereas the distance between "),a("code",[e._v("Bruce")]),e._v(" and "),a("code",[e._v("Willis")]),e._v(" is equal to "),a("strong",[e._v("8")]),e._v(" in the document "),a("code",[e._v("001")]),e._v(" since the full stop is a hard space.")]),e._v(" "),a("h3",{attrs:{id:"numeric-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#numeric-type"}},[e._v("#")]),e._v(" Numeric type")]),e._v(" "),a("p",[e._v("A numeric type ("),a("code",[e._v("integer")]),e._v(", "),a("code",[e._v("float")]),e._v(") is converted to a human-readable decimal number string representation. Numeric types can be searched as they are converted to strings.")]),e._v(" "),a("p",[e._v("You can "),a("RouterLink",{attrs:{to:"/guides/main_concepts/relevancy.html#adding-your-rules"}},[e._v("add custom ranking rules")]),e._v(" to create an ascending or descending sorting rule on a given attribute that has a numeric value in the documents."),a("br"),e._v("\nYou can also create "),a("RouterLink",{attrs:{to:"/guides/advanced_guides/filtering.html"}},[e._v("filters")]),e._v(". The "),a("code",[e._v(">")]),e._v(", "),a("code",[e._v(">=")]),e._v(", "),a("code",[e._v("<")]),e._v(", and "),a("code",[e._v("<=")]),e._v(" relational operators apply only to numerical values.")],1),e._v(" "),a("h3",{attrs:{id:"boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[e._v("#")]),e._v(" Boolean")]),e._v(" "),a("p",[e._v("A Boolean value, which is either "),a("code",[e._v("true")]),e._v(" or "),a("code",[e._v("false")]),e._v(", is received and converted to a lowercase human-readable text (i.e. "),a("code",[e._v("true")]),e._v(" and "),a("code",[e._v("false")]),e._v("). Booleans can be searched as they are converted to strings.")]),e._v(" "),a("h3",{attrs:{id:"array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array"}},[e._v("#")]),e._v(" Array")]),e._v(" "),a("p",[e._v("An array represents a collection of elements that can be strings or arrays for instance. An array is recursively broken into separate string tokens, which means separate words.")]),e._v(" "),a("p",[e._v("After the tokenizing process, each word is indexed and stored in the global dictionary of the corresponding index.")]),e._v(" "),a("h4",{attrs:{id:"examples-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples-2"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("p",[e._v("The following input:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Bruce Willis"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Vin Diesel"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Kung Fu Panda"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),a("p",[e._v("Will be processed as if all elements were arranged at the same level:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Bruce Willis. Vin Diesel. Kung Fu Panda."')]),e._v("\n")])])]),a("p",[e._v("The strings above will be separated by soft and hard spaces exactly as explained in the "),a("RouterLink",{attrs:{to:"/guides/advanced_guides/datatypes.html#examples"}},[e._v("string example")]),e._v(".")],1),e._v(" "),a("h3",{attrs:{id:"object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[e._v("#")]),e._v(" Object")]),e._v(" "),a("p",[e._v("JSON objects are written in key/value pairs and surrounded by curly braces. An object is broken into separate string tokens, which means separate words.")]),e._v(" "),a("p",[e._v("After the tokenizing process, each word is indexed and stored in the global dictionary of the corresponding index.")]),e._v(" "),a("h4",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[e._v("#")]),e._v(" Example")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"movie_id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"1564saqw12ss"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Kung fu Panda"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("In the example above, "),a("code",[e._v("movie_id")]),e._v(", "),a("code",[e._v("1564saqw12ss")]),e._v(", "),a("code",[e._v("title")]),e._v(", "),a("code",[e._v("Kung fu Panda")]),e._v(" are all considered as sentences. The colon "),a("code",[e._v(":")]),e._v(" and comma "),a("code",[e._v(",")]),e._v(" characters are used as separators.")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"movie_id. 1564saqw12ss. title. Kung fu Panda."')]),e._v("\n")])])]),a("p",[e._v("These sentences will be separated by soft and hard spaces exactly as explained in the "),a("RouterLink",{attrs:{to:"/guides/advanced_guides/datatypes.html#examples"}},[e._v("string example")]),e._v(".")],1),e._v(" "),a("h3",{attrs:{id:"null-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-type"}},[e._v("#")]),e._v(" null type")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("null")]),e._v(" type can be pushed into MeiliSearch but it "),a("strong",[e._v("won't be taken into account for indexing")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"possible-tokenization-issues"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#possible-tokenization-issues"}},[e._v("#")]),e._v(" Possible Tokenization Issues")]),e._v(" "),a("p",[e._v("Even if it behaves exactly as expected, the tokenization process may make less sense in some cases such as:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"S.O.S"\n"George R. R. Martin"\n10,3\n')])])]),a("p",[e._v("For the two strings above, the full stops "),a("code",[e._v(".")]),e._v(" will be considered as hard spaces."),a("br"),e._v(" "),a("code",[e._v("10,3")]),e._v(" will be broken into two strings "),a("code",[e._v("10")]),e._v(" and "),a("code",[e._v("3")]),e._v(" instead of being processed as a numeric type.")])])}),[],!1,null,null,null);t.default=n.exports}}]);