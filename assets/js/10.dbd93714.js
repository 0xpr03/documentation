(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{291:function(e,t,r){"use strict";r.r(t);var i={field:"A field is composed of an <b>attribute</b> and its associated data. <br><br> Ex: <code>attribute: 'data'</code>",attribute:"The key associated to some data in a field. <br><br> Ex:  <code>title: 'batman'</code> <br> title is the attribute in this example.","ranking rules":"Rules that are used by MeiliSearch to determine the relevancy of a document. <br><br> For example, the number of typos or the number of times the matching query is found in a document.","primary key":"The attribute in a document of its unique identifier field. <br><br> Used by MeiliSearch to store the document. <br><br> Example: `movie_id` is the primary key of a movie document.",schemaless:"This means you don't need to define or describe the structure of your data before adding data to an index. <br><br> For example, SQL's tables need schemas but mongodb's collections does not require it.",searchable:"The data is used to determine the relevancy of a document when doing a search query.",displayed:"The field is present in the document returned upon search."},a={props:{word:{type:String,validator:function(e){return i[e]}}},data:function(){return{glossary:i}}},o=r(8),n=Object(o.a)(a,(function(){var e=this.$createElement,t=this._self._c||e;return t("tooltip",{attrs:{text:this.word}},[t("span",{domProps:{innerHTML:this._s(this.glossary[this.word])}})])}),[],!1,null,null,null);t.default=n.exports}}]);